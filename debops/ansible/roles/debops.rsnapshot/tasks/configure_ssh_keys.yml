---

- name: Create root ssh key
  user:
    name: 'root'
    generate_ssh_key: True
    ssh_key_bits: '4096'
    createhome: False

- name: Get the root ssh key
  slurp:
    src: '/root/.ssh/id_rsa.pub'
  register: rsnapshot_slurp_ssh_key

- name: Extract root ssh key
  set_fact:
    rsnapshot_register_ssh:
      comment: 'root@{{ ansible_fqdn }} by debops.rsnapshot'
      key: '{{ rsnapshot_slurp_ssh_key.content | b64decode | trim }}'

- name: Deploy ssh key on client hosts
  authorized_key:
    user: 'root'
    key: '{{ rsnapshot_register_ssh.key + " " + rsnapshot_register_ssh.comment }}'
    key_options: 'no-pty,no-agent-forwarding,no-X11-forwarding,no-port-forwarding,command="{{
                  hostvars[item].rsnapshot_ssh_command
                  if (hostvars[item].rsnapshot_ssh_command|d() and
                      hostvars[item].rsnapshot_ssh_command|bool)
                  else rsnapshot_ssh_command }}"'
    state: 'present'
  delegate_to: '{{ item }}'
  with_items: '{{ rsnapshot_servers }}'
  when: ((item is defined and item) and item != inventory_hostname and
         hostvars[item].ansible_hostname is defined)

- name: Make sure /root/.ssh/known_hosts file exists
  command: touch /root/.ssh/known_hosts
  args:
    creates: '/root/.ssh/known_hosts'
    warn: False

- name: Remove known host fingerprints from ~/.ssh/known_hosts
  command: ssh-keygen -f /root/.ssh/known_hosts -R {{ hostvars[item].rsnapshot_backup_host
                                                      if (hostvars[item].rsnapshot_backup_host|d() and
                                                          hostvars[item].rsnapshot_backup_host|bool)
                                                      else hostvars[item].ansible_fqdn }}
  with_items: '{{ rsnapshot_servers }}'
  when: rsnapshot_reset_sshkeys is defined and rsnapshot_reset_sshkeys

- name: Get list of already scanned host fingerprints
  shell: ssh-keygen -f /root/.ssh/known_hosts -F {{ hostvars[item].rsnapshot_backup_host
                                                    if (hostvars[item].rsnapshot_backup_host|d() and
                                                        hostvars[item].rsnapshot_backup_host|bool)
                                                    else hostvars[item].ansible_fqdn }}
         | grep -q '^# Host {{ hostvars[item].rsnapshot_backup_host
                               if (hostvars[item].rsnapshot_backup_host|d() and
                                   hostvars[item].rsnapshot_backup_host|bool)
                               else hostvars[item].ansible_fqdn }} found'
  with_items: '{{ rsnapshot_servers }}'
  when: ((item is defined and item) and item != inventory_hostname and
         hostvars[item].ansible_fqdn is defined)
  register: rsnapshot_register_known_hosts
  changed_when: False
  failed_when: False

- name: Scan SSH fingerprints of rsnapshot servers with custom hostname
  shell: 'ssh-keyscan -H -T 10 -p {{ hostvars[item].rsnapshot_ssh_port
                                     if (hostvars[item].rsnapshot_ssh_port|d() and
                                         hostvars[item].rsnapshot_ssh_port)
                                     else rsnapshot_ssh_port }}
                                     {{ hostvars[item].rsnapshot_backup_host }} >> /root/.ssh/known_hosts'
  with_items: '{{ rsnapshot_register_known_hosts.results }}'
  when: ((item.rc is defined and item.rc > 0) and
         (item.rsnapshot_backup_host is defined and item.rsnapshot_backup_host))

- name: Scan SSH fingerprints of rsnapshot servers
  shell: 'ssh-keyscan -H -T 10 -p {{ hostvars[item.item].rsnapshot_ssh_port
                                     if (hostvars[item.item].rsnapshot_ssh_port|d() and
                                         hostvars[item.item].rsnapshot_ssh_port)
                                     else rsnapshot_ssh_port }}
                                     {{ hostvars[item.item].ansible_fqdn }} >> /root/.ssh/known_hosts'
  with_items: '{{ rsnapshot_register_known_hosts.results }}'
  when: item.rc is defined and item.rc > 0

- name: Check if ~/.profile file exists on root account
  stat:
    path: ~/.profile
  register: rsnapshot_register_root_profile
  delegate_to: '{{ item }}'
  with_items: '{{ rsnapshot_servers }}'
  when: ((item is defined and item) and item != inventory_hostname and
         hostvars[item].ansible_hostname is defined)

- name: Fix shell 'stdin is not a tty' issue
  lineinfile:
    dest: '~/.profile'
    regexp: 'mesg n'
    line: 'tty -s && mesg n || true'
    state: 'present'
    create: 'no'
  delegate_to: '{{ item.0 }}'
  with_together:
    - '{{ rsnapshot_servers }}'
    - '{{ rsnapshot_register_root_profile.results }}'
  when: (((item.0 is defined and item.0) and item.0 != inventory_hostname and
          hostvars[item.0].ansible_hostname is defined) and
         (item.1 is defined and item.1.stat.exists))
