# {{ ansible_managed }}

{% if item.by_role|d() %}
# File generated by Ansible role: '{{ item.by_role }}'

{% endif %}
{% if item.comment|d() %}
{{ item.comment | regex_replace('\n$','') | comment(prefix='', postfix='') }}
{% endif %}
{% set default_action = item.default_action | d('DUNNO') %}
{% set auto_margin = {'length': 8} %}
{% if item.raw|d() %}
{{ item.raw }}
{% elif item.config|d() %}
{%   for config_key in (['hosts', 'server_host', 'server_port', 'user', 'password', 'bind', 'bind_dn', 'bind_pw', 'dbname', 'search_base', 'query', 'query_filter'] + (item.config.keys() | sort)) | unique %}
{%     if item.config[config_key] is defined %}
{%       set value = item.config[config_key] %}
{{ '{} = {}'.format(config_key, (([ value ] if value is string else value) | join(', '))) }}
{%     endif %}
{%   endfor %}
{% else %}
{%   for element in (item.options|d([]) + item.content|d([])) %}
{%     if (element.key | d(element.name | d(element))) | length > auto_margin['length']|int %}
{%       set _ = auto_margin.update({'length': (element.key | d(element.name | d(element))) | length | int}) %}
{%     endif %}
{%   endfor %}
{%   for element in (item.options|d([]) + item.content|d([])) %}
{%     if element.state|d('present') != 'absent' %}
{%       set option_commented = ('#' if element.state|d('present') == 'comment' else '') %}
{%       set margin = (7 if element.state|d('present') == 'comment' else 8) %}
{%       if element.comment|d() %}
{{ element.comment | regex_replace('\n$','') | comment(prefix='\n', postfix='') -}}
{%       endif %}
{{ ('{}{:<' + (margin + auto_margin['length'])|string + '} {}').format(option_commented, element.key | d(element.name | d(element)), element.action | d(element.value | d(default_action))) }}
{%     endif %}
{%   endfor %}
{% endif %}
