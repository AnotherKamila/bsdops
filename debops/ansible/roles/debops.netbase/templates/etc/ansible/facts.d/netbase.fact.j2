#!{{ ansible_python['executable'] }}

# {{ ansible_managed }}

"""Return information about host FQDN, domain and IP address

This script checks the FQDN and the IP address of the host and returns it in
JSON format for consumption by Ansible. The data is gathered from the host's
perspective, because Ansible facts are not sufficient to determine which FQDN
and IP address the host recognizes as "itself".

Returned JSON keys:

  - "configured"    If True, the role has been correctly appled on the host.

  - "self_fqdn"     The host's FQDN as seen by its operating system, either
                    defined locally in '/etc/hosts' or resolved by the DNS.

  - "self_domain"   The host's domain extracted from the FQDN name.

  - "self_address"  IP address resolved by the host from it's FQDN name.

  - "self_local"    If True, the script detected the FQDN and IP address
                    information in local '/etc/hosts' database.

                    If False, the script did not detect the FQDN and IP address
                    locally, and assumes that it came from the DNS.
"""

from __future__ import print_function
from json import dumps
import socket


def get_dns_domain():
    try:
        return socket.getfqdn().split('.', 1)[1]
    except IndexError:
        return ''


output = {'configured': True,
          'self_address': socket.gethostbyname(socket.getfqdn()),
          'self_domain': get_dns_domain(),
          'self_fqdn': socket.getfqdn(),
          'self_local': False}

# Check if the host address and FQDN are defined locally, to not remove them
# accidentally
with open('/etc/hosts', 'r') as hosts:
    for line in hosts:
        if (output['self_fqdn'] in line.split()[1:]
                and output['self_address'] in line.split()[0]):
            output['self_local'] = True

print(dumps(output, sort_keys=True, indent=4))
