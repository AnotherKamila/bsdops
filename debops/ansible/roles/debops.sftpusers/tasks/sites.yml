---

- name: Create base directory for user websites
  file:
    path: '{{ sftpusers_default_www_prefix }}/{{ item.group | default(item.name + sftpusers_name_suffix) }}'
    state: 'directory'
    owner: 'root'
    group: '{{ sftpusers_default_www_group }}'
    mode: '0711'
  with_flattened:
    - '{{ sftpusers_list }}'
    - '{{ sftpusers_group_list }}'
    - '{{ sftpusers_host_list }}'
  when: ((item.name is defined and item.name) and (item.sites is defined and item.sites) and
        (item.state is undefined or (item.state is defined and item.state != 'absent')))

- name: Create root directory for user websites
  file:
    path: '{{ sftpusers_default_www_prefix }}/{{ item.group | default(item.name + sftpusers_name_suffix) }}/sites'
    state: 'directory'
    owner: 'root'
    group: '{{ item.group | default(item.name + sftpusers_name_suffix) }}'
    mode: '2775'
  with_flattened:
    - '{{ sftpusers_list }}'
    - '{{ sftpusers_group_list }}'
    - '{{ sftpusers_host_list }}'
  when: ((item.name is defined and item.name) and (item.sites is defined and item.sites) and
        (item.state is undefined or (item.state is defined and item.state != 'absent')))

- name: Create website public directories
  file:
    path: '{{ sftpusers_default_www_prefix }}/{{ item.0.group | default(item.0.name + sftpusers_name_suffix) }}/sites/{{ item.1 }}/public'
    state: 'directory'
    owner: 'root'
    group: '{{ item.0.group | default(item.0.name + sftpusers_name_suffix) }}'
    mode: '2775'
  with_subelements:
    - '{{ sftpusers_list + sftpusers_group_list + sftpusers_host_list  }}'
    - 'sites'
  when: ((item.0.name is defined and item.0.name) and
        (item.0.state is undefined or (item.0.state is defined and item.0.state != 'absent')))

- name: Create bind directory for user websites
  file:
    path: '{{ item.home | default(sftpusers_default_home_prefix + "/" + item.name + sftpusers_name_suffix) }}/sites'
    state: 'directory'
    owner: 'root'
    group: '{{ item.group | default(item.name + sftpusers_name_suffix) }}'
    mode: '2775'
  with_flattened:
    - '{{ sftpusers_list }}'
    - '{{ sftpusers_group_list }}'
    - '{{ sftpusers_host_list }}'
  when: ((item.name is defined and item.name) and (item.sites is defined and item.sites) and
        (item.state is undefined or (item.state is defined and item.state != 'absent')))

# At the moment mount module does not work correctly with -o bind, so we use
# some workarounds.
# https://github.com/ansible/ansible/issues/7121

- name: Unmount website directories in user homes when requested
  command: umount {{ item.home | default(sftpusers_default_home_prefix + "/" + item.name + sftpusers_name_suffix) }}/sites
  args:
    removes: '{{ item.home | default(sftpusers_default_home_prefix + "/" + item.name + sftpusers_name_suffix) }}/sites/{{ item.sites[0] }}'
  with_flattened:
    - '{{ sftpusers_list }}'
    - '{{ sftpusers_group_list }}'
    - '{{ sftpusers_host_list }}'
  when: ((item.name is defined and item.name) and (item.sites is defined and item.sites) and
        (item.state is defined and item.state == 'absent'))

- name: Remove bind of website directories in /etc/fstab
  mount:
    name: '{{ item.home | default(sftpusers_default_home_prefix + "/" + item.name + sftpusers_name_suffix) }}/sites'
    src: '{{ sftpusers_default_www_prefix }}/{{ item.group | default(item.name + sftpusers_name_suffix) }}/sites'
    opts: '{{ sftpusers_default_mount_options }}'
    fstype: 'none'
    state: 'absent'
  with_flattened:
    - '{{ sftpusers_list }}'
    - '{{ sftpusers_group_list }}'
    - '{{ sftpusers_host_list }}'
  when: ((item.name is defined and item.name) and (item.sites is defined and item.sites) and
        (item.state is defined and item.state == 'absent'))

- name: Bind website directories in SFTPonly users homes
  mount:
    name: '{{ item.home | default(sftpusers_default_home_prefix + "/" + item.name + sftpusers_name_suffix) }}/sites'
    src: '{{ sftpusers_default_www_prefix }}/{{ item.group | default(item.name + sftpusers_name_suffix) }}/sites'
    opts: '{{ sftpusers_default_mount_options }}'
    fstype: 'none'
    state: 'present'
  with_flattened:
    - '{{ sftpusers_list }}'
    - '{{ sftpusers_group_list }}'
    - '{{ sftpusers_host_list }}'
  when: ((item.name is defined and item.name) and (item.sites is defined and item.sites) and
        (item.state is undefined or (item.state is defined and item.state != 'absent')))

- name: Mount website directories in user homes
  command: mount {{ item.home | default(sftpusers_default_home_prefix + "/" + item.name + sftpusers_name_suffix) }}/sites
  args:
    creates: '{{ item.home | default(sftpusers_default_home_prefix + "/" + item.name + sftpusers_name_suffix) }}/sites/{{ item.sites[0] }}'
  with_flattened:
    - '{{ sftpusers_list }}'
    - '{{ sftpusers_group_list }}'
    - '{{ sftpusers_host_list }}'
  when: ((item.name is defined and item.name) and (item.sites is defined and item.sites) and
        (item.state is undefined or (item.state is defined and item.state != 'absent')))
