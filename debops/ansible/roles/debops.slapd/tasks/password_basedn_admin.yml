---

- name: Check if BaseDN administrator password hash exists
  stat:
    path: '{{ slapd_basedn_admin_hash }}'
  register: slapd_register_local_basedn_admin_hash
  become: False
  delegate_to: 'localhost'
  no_log: True

- name: Read hash of BaseDN administrator password
  set_fact:
    slapd_register_basedn_admin_hash: '{{ lookup( "file", slapd_basedn_admin_hash) }}'
  when: slapd_register_local_basedn_admin_hash.stat.exists
  no_log: True

- name: Generate BaseDN administrator password
  shell: slappasswd -s {{ lookup('password', slapd_basedn_admin_password + ' length=' + slapd_password_length) }}
  register: slapd_register_basedn_admin_password
  when: (slapd_register_basedn_admin_hash is undefined or
         (slapd_register_basedn_admin_hash is defined and not slapd_register_basedn_admin_hash))
  changed_when: False
  no_log: True

- name: Save hash of BaseDN administrator password
  copy:
    content: '{{ slapd_register_basedn_admin_password.stdout }}'
    dest: '{{ slapd_basedn_admin_hash }}'
  become: False
  delegate_to: 'localhost'
  when: (slapd_register_basedn_admin_hash is undefined or
         (slapd_register_basedn_admin_hash is defined and not slapd_register_basedn_admin_hash))
  no_log: True

- name: Set BaseDN administrator
  ldap_attr:
    dn: 'olcDatabase={1}{{ slapd_backend }},cn=config'
    name: '{{ item.key }}'
    values: '{{ item.value }}'
    state: 'exact'
  with_dict:
    olcRootDN: '{{ slapd_basedn_admin }}'
    olcRootPW: '{{ slapd_register_basedn_admin_password.stdout | default(slapd_register_basedn_admin_hash) }}'
  no_log: True

- name: Create path to LDAP password file in secrets
  set_fact:
    slapd_register_basedn_admin_ansible_phony_password: '{{ lookup("password", slapd_basedn_admin_ansible_password) }}'
  when: slapd_basedn_admin_ansible_password is defined and slapd_basedn_admin_ansible_password

- name: Save BaseDN administrator password for Ansible
  copy:
    src: '{{ slapd_basedn_admin_password }}'
    dest: '{{ slapd_basedn_admin_ansible_password }}'
  become: False
  delegate_to: 'localhost'
  when: slapd_basedn_admin_ansible_password is defined and slapd_basedn_admin_ansible_password
