---

- name: Check if administrator password hash exists
  stat:
    path: '{{ slapd_config_admin_hash }}'
  register: slapd_register_local_config_admin_hash
  become: False
  delegate_to: 'localhost'

- name: Read hash of config administrator password
  set_fact:
    slapd_register_config_admin_hash: '{{ lookup( "file", slapd_config_admin_hash) }}'
  when: slapd_register_local_config_admin_hash.stat.exists
  no_log: True

- name: Generate config administrator password
  command: slappasswd -s {{ lookup('password', slapd_config_admin_password + ' length=' + slapd_password_length) }}
  register: slapd_register_config_admin_password
  when: (slapd_register_config_admin_hash is undefined or
         (slapd_register_config_admin_hash is defined and not slapd_register_config_admin_hash))
  changed_when: False
  no_log: True

- name: Save hash of config administrator password
  copy:
    content: '{{ slapd_register_config_admin_password.stdout }}'
    dest: '{{ slapd_config_admin_hash }}'
  become: False
  delegate_to: 'localhost'
  when: (slapd_register_config_admin_hash is undefined or
         (slapd_register_config_admin_hash is defined and not slapd_register_config_admin_hash))
  no_log: True

- name: Set config administrator password
  ldap_attr:
    dn: 'olcDatabase={0}config,cn=config'
    name: '{{ item.key }}'
    values: '{{ item.value }}'
    state: 'exact'
  with_dict:
    olcRootDN: 'cn=admin,cn=config'
    olcRootPW: '{{ slapd_register_config_admin_password.stdout | default(slapd_register_config_admin_hash) }}'
  no_log: True
