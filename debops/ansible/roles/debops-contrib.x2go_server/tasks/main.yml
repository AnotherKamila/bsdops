---

- name: Get X2Go APT PGP key
  apt_key:
    id: '{{ x2go_server__apt_repo_key_fingerprint_map[ansible_distribution]
            | d(x2go_server__apt_repo_key_fingerprint_map["default"]) }}'
    keyserver: '{{ ansible_local.core.keyserver
                   if (ansible_local|d() and ansible_local.core|d() and
                       ansible_local.core.keyserver|d())
                   else "hkp://pool.sks-keyservers.net" }}'
    state: '{{ "present" if (x2go_server__deploy_state == "present") else "absent" }}'
  register: x2go_server__register_apt_key
  until: x2go_server__register_apt_key is succeeded
  when: (x2go_server__apt_repo_key_fingerprint_map[ansible_distribution]|d("not omit") != omit)

- name: Configure X2Go APT repository
  apt_repository:
    repo: '{{ x2go_server__upstream_repository_map[ansible_distribution]
              | d(x2go_server__upstream_repository_map["default"]) }}'
    state: '{{ "present" if (x2go_server__deploy_state == "present") else "absent" }}'
    update_cache: True

- name: Ensure specified packages are in there desired state
  apt:
    name: '{{ item }}'
    state: '{{ "latest" if (x2go_server__deploy_state == "present") else "absent" }}'
    install_recommends: False
    purge: True
  with_flattened: '{{ x2go_server__base_packages }}'
  register: x2go_server__register_packages
  until: x2go_server__register_packages is succeeded
  when: (not ansible_check_mode)
  ## This might fail in check mode in case the repository has not been added yet.
