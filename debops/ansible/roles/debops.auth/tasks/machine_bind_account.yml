---

- name: Check if host password hash exists
  stat:
    path: '{{ auth_nslcd_bind_host_hash }}'
  register: auth_register_local_nslcd_bind_host_hash
  become: False
  delegate_to: 'localhost'
  no_log: True

- name: Read hash of host password
  set_fact:
    auth_register_nslcd_bind_host_hash: '{{ lookup( "file", auth_nslcd_bind_host_hash) }}'
  when: auth_register_local_nslcd_bind_host_hash.stat.exists
  no_log: True

- name: Generate host password
  shell: echo -n {{ lookup('password', auth_nslcd_bind_host_password + ' length=' + auth_nslcd_password_length) }} | openssl dgst -sha1 -binary | openssl enc -base64 | awk '{print "{SHA}"$0}'
  register: auth_register_nslcd_bind_host_password
  when: (auth_register_nslcd_bind_host_hash is undefined or
         (auth_register_nslcd_bind_host_hash is defined and not auth_register_nslcd_bind_host_hash))
  changed_when: False
  no_log: True

- name: Save hash of host password
  copy:
    content: '{{ auth_register_nslcd_bind_host_password.stdout }}'
    dest: '{{ auth_nslcd_bind_host_hash }}'
  become: False
  delegate_to: 'localhost'
  when: (auth_register_nslcd_bind_host_hash is undefined or
         (auth_register_nslcd_bind_host_hash is defined and not auth_register_nslcd_bind_host_hash))
  no_log: True

- name: Make sure that host base DN exists
  ldap_entry:
    dn: '{{ auth_nslcd_bind_host_basedn }}'
    objectClass: [ 'organizationalUnit', 'top' ]
    state: 'present'
    server_uri: '{{ secret_ldap_server_uri }}'
    start_tls:  '{{ secret_ldap_start_tls }}'
    bind_dn: '{{ secret_ldap_admin_bind_dn }}'
    bind_pw: '{{ secret_ldap_admin_bind_pw }}'
  become: '{{ secret_ldap_sudo }}'
  delegate_to: '{{ secret_ldap_delegate_to }}'
  no_log: True

- name: Make sure that host account exists
  ldap_entry:
    dn: '{{ auth_nslcd_bind_host_dn }}'
    objectClass: [ 'device', 'simpleSecurityObject' ]
    attributes:
      userPassword: '{{ auth_register_nslcd_bind_host_password.stdout | default(auth_register_nslcd_bind_host_hash) }}'
    state: 'present'
    server_uri: '{{ secret_ldap_server_uri }}'
    start_tls:  '{{ secret_ldap_start_tls }}'
    bind_dn: '{{ secret_ldap_admin_bind_dn }}'
    bind_pw: '{{ secret_ldap_admin_bind_pw }}'
  become: '{{ secret_ldap_sudo }}'
  delegate_to: '{{ secret_ldap_delegate_to }}'
  no_log: True

- name: Set host bind password in LDAP
  ldap_attr:
    dn: '{{ auth_nslcd_bind_host_dn }}'
    name: '{{ item.key }}'
    values: '{{ item.value }}'
    state: 'exact'
    server_uri: '{{ secret_ldap_server_uri }}'
    start_tls:  '{{ secret_ldap_start_tls }}'
    bind_dn: '{{ secret_ldap_admin_bind_dn }}'
    bind_pw: '{{ secret_ldap_admin_bind_pw }}'
  become: '{{ secret_ldap_sudo }}'
  delegate_to: '{{ secret_ldap_delegate_to }}'
  with_dict:
    userPassword: '{{ auth_register_nslcd_bind_host_password.stdout | default(auth_register_nslcd_bind_host_hash | d()) }}'
  no_log: True
