---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# debops.bootstrap default variables [[[
# ======================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../includes/global.rst


# APT and packages [[[
# --------------------

bootstrap__base_packages_linux:
  - 'lsb-release'
  - 'dbus'

# .. envvar:: bootstrap__base_packages [[[
#
# Base packages installed during bootstrap.
bootstrap__base_packages: "{{ bootstrap__base_packages_linux if ansible_os_family != 'FreeBSD' else [] }}"
                                                                   # ]]]
# .. envvar:: bootstrap__packages [[[
#
# Install additional packages during bootstrap.
bootstrap__packages: []
                                                                   # ]]]
                                                                   # ]]]
# System administrator accounts [[[
# ---------------------------------

# .. envvar:: bootstrap__admin [[[
#
# Enable configuration of administrator accounts.
bootstrap__admin: True

                                                                   # ]]]
# .. envvar:: bootstrap__admin_system [[[
#
# Should the admin accounts be system accounts (UID < 1000) if not specified
# otherwise?
bootstrap__admin_system: True

                                                                   # ]]]
# .. envvar:: bootstrap__admin_default_users [[[
#
# List of default user accounts created by the role. See
# :ref:`bootstrap__ref_admin_users` for more details.
bootstrap__admin_default_users:
  - name: '{{ ansible_user
              if (ansible_user | d() and
                  ansible_user != "root")
              else lookup("env", "USER") }}'

                                                                   # ]]]
# .. envvar:: bootstrap__admin_users [[[
#
# List of additional user accounts created by the role. See
# :ref:`bootstrap__ref_admin_users` for more details.
bootstrap__admin_users: []

                                                                   # ]]]
# .. envvar:: bootstrap__admin_groups [[[
#
# List of local system groups which admin accounts will be added to. If any
# groups don't exists, they will be automatically created as "system" groups
# with GID < 1000.
#
# The first specified group is used as the :command:`sudo` passwordless admin group.
#
# All new user accounts will have their home directories in the first group
# listed here as well, to allow easier communication between administrators.
bootstrap__admin_groups: '{{ ansible_local.system_groups.access.root
                             if (ansible_local|d() and ansible_local.system_groups|d() and
                                 ansible_local.system_groups.access|d() and
                                 ansible_local.system_groups.access.root|d())
                             else [ "admins" ] }}'

                                                                   # ]]]
# .. envvar:: bootstrap__admin_home_path [[[
#
# Root path of the home directory of the admin accounts, when they are "normal"
# user accounts with UID and GID >= 1000.
bootstrap__admin_home_path: '/home'

                                                                   # ]]]
# .. envvar:: bootstrap__admin_home_path_system [[[
#
# Root path of the home directory of the admin accounts, when they are "system"
# user accounts with UID and GID < 1000.
bootstrap__admin_home_path_system: '/var/local'

                                                                   # ]]]
# .. envvar:: bootstrap__admin_home_group [[[
#
# New admin accounts will have their home directories in this system group to
# allow easier data exchange between system administrators.
bootstrap__admin_home_group: '{{ bootstrap__admin_groups[0] }}'

                                                                   # ]]]
# .. envvar:: bootstrap__admin_home_mode [[[
#
# Specify permissions for new admin account home directories.
bootstrap__admin_home_mode: '0750'

                                                                   # ]]]
# .. envvar:: bootstrap__admin_comment [[[
#
# Default comment / GECOS field which is set on the new admin accounts if none
# is specified.
bootstrap__admin_comment: 'System Administrator'

                                                                   # ]]]
# .. envvar:: bootstrap__admin_shell [[[
#
# Default shell set on the new admin accounts if none is specified.
bootstrap__admin_shell: "{{ '/bin/bash' if ansible_os_family != 'FreeBSD' else '/bin/csh' }}"

                                                                   # ]]]
# .. envvar:: bootstrap__admin_sshkeys [[[
#
# List of SSH keys configured on root and administrator accounts. It takes all
# active keys from your current ssh agent session plus all public keys which you
# keep in the :file:`~/.ssh/` directory of the user which you are bootstrapping DebOps
# from. If you are not happy with that scenario, for example you have some keys
# which you don't like to be included, please modify the variable accordingly
# to your requirements.
bootstrap__admin_sshkeys: [ '{{ lookup("pipe","ssh-add -L | grep ^ssh || cat ~/.ssh/*.pub || true") }}' ]
                                                                   # ]]]
                                                                   # ]]]
                                                                   # ]]]
