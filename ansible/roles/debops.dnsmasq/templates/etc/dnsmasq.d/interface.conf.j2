# {{ ansible_managed }}

{% if not (item.interface|d() and
           hostvars[inventory_hostname]["ansible_" + item.interface]|d() and
           hostvars[inventory_hostname]["ansible_" + item.interface].ipv4|d() or
           hostvars[inventory_hostname]["ansible_" + item.interface].ipv6|d()) %}
# Interface {{ item.interface }} does not have any IP addresses.
{% else %}
{%   set dnsmasq__tpl_ipv4 = '' %}
{%   set dnsmasq__tpl_ipv6 = [] %}
{%   if hostvars[inventory_hostname]["ansible_" + item.interface].ipv4|d() %}
{%     set dnsmasq__tpl_ipv4 = hostvars[inventory_hostname]["ansible_" + item.interface].ipv4.address + '/' +
                              hostvars[inventory_hostname]["ansible_" + item.interface].ipv4.netmask %}
{%   endif %}
{%   if hostvars[inventory_hostname]["ansible_" + item.interface].ipv6 is defined and hostvars[inventory_hostname]["ansible_" + item.interface].ipv6 %}
{%     for element in hostvars[inventory_hostname]["ansible_" + item.interface].ipv6 %}
{%       if not element.address | ipv6('link-local') %}
{%         set _ = dnsmasq__tpl_ipv6.append(element.address + '/' + element.prefix) %}
{%       endif %}
{%     endfor %}
{%   endif %}
# ---- Network interface options ----

# Bind on specified interface.
interface = {{ item.interface }}

{%   if item.interface in dnsmasq__no_dhcp_interfaces %}
# This interface is only used for DNS
no-dhcp-interface = {{ item.interface }}
{%   else %}

# ---- DHCP options ----

{%     if dnsmasq__dhcpv4|bool and dnsmasq__tpl_ipv4|d() %}
# Enable DHCPv4 server.
dhcp-range = set:{{ item.interface }},{{ dnsmasq__tpl_ipv4 | ipv4(item.dhcp_range_start | d("10")) | ipv4('address') }},{{ dnsmasq__tpl_ipv4 | ipv4(item.dhcp_range_end | d("-10")) | ipv4('address') }},{{ item.dhcp_lease | d('24h') }}
{%     endif %}

{%     if dnsmasq__dhcpv6|bool and dnsmasq__tpl_ipv6|d() %}
# Enable DHCPv6 server.
{%       for element in dnsmasq__tpl_ipv6 %}
dhcp-range = set:{{ item.interface }},{{ element | ipv6(item.dhcp_range_start | d('10')) | ipv6('address') }}{% if item.ipv6_mode|d("") != "ra-only" %},{{ element | ipv6(item.dhcp_range_end | d('-10')) | ipv6('address') }}{% endif %},{{ item.ipv6_mode | d('ra-names,ra-stateless,slaac') }},{{ element | ipv6('prefix') }},{{ item.dhcp_lease | d('24h') }}
{%       endfor %}
{%     endif %}

{%     if dnsmasq__router|bool %}
{%       if item.gateway is string %}
# IPv4 router address.
dhcp-option = tag:{{ item.interface }},option:router,{{ item.gateway }}
{%       else %}
# IPv4 router address.
# The special address 0.0.0.0 is taken to mean "the address of the machine running dnsmasq".
dhcp-option = tag:{{ item.interface }},option:router,0.0.0.0
{%       endif %}
{%     else %}
# IPv4 router is not advertised.
dhcp-option = tag:{{ item.interface }},option:router
{%     endif %}

{%     if dnsmasq__search|d() %}
{%       set dnsmasq__tpl_search = [] %}
{%       for domain in dnsmasq__search %}
{%         set _ = dnsmasq__tpl_search.append(domain) %}
{%       endfor %}
{%       if dnsmasq__register_search is defined and dnsmasq__register_search %}
{%         for domain in dnsmasq__register_search.stdout_lines | difference(dnsmasq__search) %}
{%           set _ = dnsmasq__tpl_search.append(domain) %}
{%         endfor %}
{%       endif %}
# Advertise list of search domains via DHCP.
dhcp-option = tag:{{ item.interface }},option:domain-search,{{ dnsmasq__tpl_search | join(",") }}
dhcp-option = tag:{{ item.interface }},option6:domain-search,{{ dnsmasq__tpl_search | join(",") }}
{%     endif %}

{%     if dnsmasq__tpl_ipv6 %}
# Advertise RDNSS servers for local IPv6 network.
dhcp-option = tag:{{ item.interface }},option6:dns-server,{{ dnsmasq__tpl_ipv6 | ipv6('address') | ipwrap | join(",") }}
{%     endif %}
{%   endif %}


{%   if dnsmasq__tftp|bool %}
# ---- TFTP options ----

# Enable TFTP service on specified interface.
enable-tftp = {{ item.interface }}
tftp-root = {{ dnsmasq__tftp_root | d('/srv/tftp') }},{{ item.interface }}
{%     if not dnsmasq__tftp_ipxe|bool %}
dhcp-boot = tag:{{ item.interface }},{{ dnsmasq__tftp_boot | d('pxelinux.0') }}
{%     endif %}
{%   endif %}

{%   if item.name|d() %}
# ---- DNS options ----

# DNS `A` record of the {{ item.interface }} interface.
interface-name = {{ item.name + '.' + dnsmasq__domain }},{{ item.interface }}

{%     if item.aliases|d() %}
{%       for name in item.aliases %}
cname = {{ name + '.' + dnsmasq__domain }},{{ item.name + '.' + dnsmasq__domain }}
{%       endfor %}
{%     endif %}
{%   endif %}
{%   if item.options|d() %}
# ---- Custom options ----

{{ item.options }}
{%   endif %}
{% endif %}
